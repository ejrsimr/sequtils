#!/usr/bin/env python3
# ejr - 2022-11-16
# last update: 2022-11-16
# INPUT: FASTA file on STDIN or with --file
# OUTPUT: Table of sequence lengths

###############################################################################
### IMPORT ####################################################################
###############################################################################
from sequtils import *
import sys
import argparse
import signal

###############################################################################
### MAIN ######################################################################
###############################################################################
def main():

    fasta = read_fasta(sys.stdin)
    print_gc_table(fasta)
    
###############################################################################
# Print table of GC content
###############################################################################
def print_gc_table(fasta):
    print("seq.id\tseq.gc")

    for header in fasta:
        seq = fasta[header].upper()
        slen = float(len(seq))
        g = float(seq.count('G'))
        c = float(seq.count('C'))
        gc = (g + c) / slen * 100
        print(header, "\t%0.2f" % gc)

###############################################################################
### RUN MAIN ##################################################################
###############################################################################
if __name__ == "__main__":

    # this catches sigpipe errors so you don't get an error message if you tail of head output
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)
    main()